{"version":3,"sources":["context/settings.js","context/auth.js","hooks/form.js","components/header/header.js","components/form/form.js","components/list/palm.jpg","components/list/list.js","components/footer/Footer.js","components/sign-up/SignUp.js","components/auth/Login.js","components/todo/todo.js","components/settings/Settings.js","app.js","index.js"],"names":["SettingsContext","React","createContext","SettingsProvider","children","useState","showCompleted","setShowCompleted","itemsToDisplay","setItemsToDisplay","sortString","setSortString","useEffect","savedCompleted","localStorage","getItem","completed","JSON","parse","getCompleted","savedItems","items","getItems","savedSort","sort","getSort","state","Provider","value","AuthContext","AuthProvider","require","isLoggedIn","setIsLoggedIn","user","setUser","login","username","password","a","axios","post","auth","console","log","creds","data","_validateToken","token","validUser","jwt_decode","cookie","save","error","message","load","values","can","capability","capabilities","includes","logout","remove","useForm","callback","defaultValues","setValues","handleSubmit","event","preventDefault","handleChange","persist","target","name","Header","incomplete","header","toggleHeader","id","className","align","to","onClick","Form","onSubmit","onChange","type","placeholder","defaultValue","difficulty","min","max","List","list","toggleComplete","deleteItem","settings","useContext","page","setPage","length","temp","start","end","i","push","renderItems","map","item","elevation","Elevation","TWO","src","Palm","alt","text","assignee","_id","complete","toString","style","marginLeft","icon","disabled","Footer","show","setShow","e","href","SignUp","setName","setPassword","body","Login","setUsername","condition","ToDo","setList","setIncomplete","uuid","get","response","results","delete","filter","isComplete","put","incompleteCount","document","title","Settings","checked","setChecked","setItems","setSort","setItem","stringify","alert","App","path","element","Component","Main","rootElement","getElementById","ReactDOM","render"],"mappings":"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","file":"static/js/main.1ce5bfaa.chunk.js","sourcesContent":["import React from 'react';\nimport { useState, useEffect } from 'react';\nexport const SettingsContext = React.createContext();\n\nfunction SettingsProvider({children}) {\n\n  const [showCompleted, setShowCompleted] = useState();\n\n  const [itemsToDisplay, setItemsToDisplay] = useState();\n\n  const [sortString, setSortString] = useState();\n\n  const getCompleted = () => {\n    const savedCompleted = localStorage.getItem('completed');\n    const completed = JSON.parse(savedCompleted)\n    if (completed) setShowCompleted(completed)\n    else setShowCompleted(false);\n  } \n\n  const getItems = () => {\n    const savedItems = localStorage.getItem('items');\n    const items = +JSON.parse(savedItems)\n    if (items) setItemsToDisplay(items)\n    else setItemsToDisplay(3);\n  } \n\n  const getSort = () => {\n    const savedSort = localStorage.getItem('sort');\n    const sort = JSON.parse(savedSort)\n    if (sort) setSortString(sort)\n    else setSortString('difficulty');\n  } \n  useEffect(() => {getCompleted()}, [])\n  useEffect(() => {getItems()}, [])\n  useEffect(() => {getSort()}, [])\n  \n\n  const state = {\n    showCompleted, \n    itemsToDisplay,\n    sortString,\n    setShowCompleted,\n    setItemsToDisplay,\n    setSortString\n  }\n\n  return (\n    <SettingsContext.Provider value={state}>\n      {children}\n    </SettingsContext.Provider>\n  )\n}\n\n\nexport default SettingsProvider;","import React, { useEffect, useState } from 'react';\nimport cookie from 'react-cookies';\nimport jwt_decode from 'jwt-decode';\nimport axios from 'axios';\n\nexport const AuthContext = React.createContext();\n\nconst jwt = require('jsonwebtoken')\n\nconst testUser = {\n  Andres: {\n    password: 'password',\n    name: 'Andres',\n    token: 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJuYW1lIjoiVXNlciIsInJvbGUiOiJ1c2VyIiwiY2FwYWJpbGl0aWVzIjoiWydyZWFkJ10iLCJpYXQiOjE1MTYyMzkwMjJ9.WXYvIKLdPz_Mm0XDYSOJo298ftuBqqjTzbRvCpxa9Go'\n  }\n}\n\nconst AuthProvider = ({ children }) => {\n\n  let [isLoggedIn, setIsLoggedIn] = useState(false);\n  let [user, setUser] = useState({});\n\n  const can = (capability) => {\n    return user?.capabilities?.includes(capability); // Cool way to write this, need to research the syntax\n  }\n\n  const login = async (username, password) => { \n    let user = await axios.post('https://api-js401.herokuapp.com/signin', {}, {\n      auth: {\n        username,\n        password,\n      }\n    })\n    console.log(user)\n    let creds = user.data;\n\n    if (creds) {\n      _validateToken(creds.token)\n    }\n    // if (creds && creds.password === password) {\n    //   try {\n    //     _validateToken(creds.token);\n    //   } catch (error) {\n    //     console.log(error.message);\n    //   }\n    // }\n  }\n\n  const logout = () => {\n    setUser({});\n    setIsLoggedIn(false);\n    cookie.remove('auth')\n  }\n\n  const _validateToken = (token) => {\n    try {\n      let validUser = jwt_decode(token);\n      if (validUser) {\n        setUser(validUser);\n        setIsLoggedIn(true);\n        cookie.save('auth', token)\n      }\n    } catch (error) {\n      console.log(error.message);\n    }\n  }\n\n  useEffect(() => {\n    let token = cookie.load('auth')\n    if (token) {\n      setIsLoggedIn(true);\n    }\n  }, []);\n\n  const values = {\n    user, \n    can, \n    isLoggedIn, \n    login,\n    logout\n  }\n\n  return (\n    <AuthContext.Provider value={values}>\n      {children}\n    </AuthContext.Provider>\n  )\n};\n\nexport default AuthProvider;","import { useState, useEffect } from 'react';\n\nconst useForm = (callback, defaultValues={}) => {\n\n  const [values, setValues] = useState({});\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    callback(values);\n  };\n\n  const handleChange = (event) => {\n    event.persist();\n    setValues(values => ({ ...values, [event.target.name]: event.target.value }));\n  };\n\n  useEffect( () => {\n    setValues( defaultValues );\n  }, defaultValues);\n  \n  return {\n    handleChange,\n    handleSubmit,\n    values,\n  };\n};\n\nexport default useForm;","import React, { useState } from 'react'\nimport { Link } from 'react-router-dom'\nimport { Navbar, NavbarDivider, NavbarGroup, NavbarHeading } from '@blueprintjs/core'\n\nfunction Header({ incomplete }) {\n\n  const [header, toggleHeader] = useState(true)\n\n  return (\n    <>\n      <header>\n        {header ? <h1>Home</h1> : <h1>Settings</h1>}\n\n        <Navbar id='navBar' className='bp4-dark bp4-align-center'>\n          <NavbarGroup align='center'>\n            <Link to='/todo-app-1' className='links'>Home</Link>\n              <NavbarDivider/>\n                <NavbarHeading id='nav-heading'>Links</NavbarHeading>\n              <NavbarDivider/>\n            <Link to='/todo-app-1/settings' className='links' onClick={() => toggleHeader(false)}>Settings</Link>\n          </NavbarGroup>\n        </Navbar>\n        {/* <Login /> */}\n      </header>\n      <header id='item-counter'>\n        <h1>To Do List: {incomplete} items pending</h1>\n      </header>\n    </>\n  )\n}\n\nexport default Header;","import React, {useState} from 'react';\nimport useForm from '../../hooks/form.js';\n\nimport { Button } from '@blueprintjs/core'\n\n\nconst Form = ({ handleChange, handleSubmit, defaultValues }) => {\n  \n  return (\n    <form onSubmit={handleSubmit} id='list-form'>\n\n        <h2>Add To Do Item</h2>\n\n        <label>\n          <span>To Do Item</span>\n          <input onChange={handleChange} name=\"text\" type=\"text\" placeholder=\"Item Details\" />\n        </label>\n\n        <label>\n          <span>Assigned To</span>\n          <input onChange={handleChange} name=\"assignee\" type=\"text\" placeholder=\"Assignee Name\" />\n        </label>\n\n        <label>\n          <span>Difficulty</span>\n          <input onChange={handleChange} defaultValue={defaultValues.difficulty} type=\"range\" min={1} max={5} name=\"difficulty\" />\n        </label>\n\n        <label>\n          <Button type=\"submit\" className='bp4-intent-success'>Add Item</Button>\n          \n        </label>\n      </form>\n  )\n\n}\n\nexport default Form;","export default __webpack_public_path__ + \"static/media/palm.e1314561.jpg\";","import React, { useContext, useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { SettingsContext } from '../../context/settings';\n\nimport { Button, Card, Elevation, Icon } from '@blueprintjs/core'\nimport Palm from './palm.jpg'\n\nconst List = ({ list, toggleComplete, deleteItem }) => {\n\n  const settings = useContext(SettingsContext);\n\n  const [page, setPage] = useState(1);\n\n  const renderItems = () => {\n    let items = [];\n    let temp = settings.itemsToDisplay\n    let start = (settings.itemsToDisplay * page) - temp;\n    let end = (settings.itemsToDisplay * page);\n    if (list.length > settings.itemsToDisplay) {\n      for (let i = start; i < end; i++) {\n        items.push(list[i]);\n      }\n      return items;\n    } else {\n      return list;\n    }\n  }\n\n  return (\n    <>\n      <section id='cards'>\n        {list.length > 0 ? renderItems().map(item => (\n          item ?\n            <Card key={item._id} elevation={Elevation.TWO}>\n              <img src={Palm} alt='palm' className='mini-palm'/>\n              <h3>{item.text}</h3>\n              <p>Assigned to: {item.assignee}</p>\n              <p>Difficulty: {item.difficulty}</p>\n              <Button onClick={() => toggleComplete(item._id, item.complete)} className={item.complete ? 'bp4-intent-danger' : 'bp4-intent-primary'}>Complete: {item.complete.toString()}</Button>\n              <Button onClick={() => deleteItem(item._id)} className='bp4-intent-warning' style={{marginLeft: '1rem'}}><Icon icon='trash'/></Button>\n              <hr />\n            </Card> : null\n        )) : <img src={Palm} alt='palm' id='palm'/>\n        }\n        {list.length > (settings.itemsToDisplay * 2) || page > 1 ?\n          <Button \n            type='click' \n            onClick={() => setPage(page - 1)} \n            className=' buttons bp4-intent-warning'\n            disabled={page < 2 ? true : false}\n            >Previous</Button> : null}\n        {list.length > settings.itemsToDisplay ?\n          <Button \n            type='click' \n            onClick={() => setPage(page + 1)} \n            className='buttons bp4-intent-success'\n            disabled={list.length / page <= settings.itemsToDisplay ? true : false}\n            >Next</Button> : null}\n      </section>\n    </>\n  )\n}\n\nexport default List;","import React from 'react';\nimport { useState } from 'react';\n\nconst Footer = () => {\n\n  const [show, setShow] = useState(false);\n\n  const handleClick = (e) => {\n    setShow(!show);\n  }\n\n  return (\n    <footer>\n    <p onClick={handleClick} id=\"me\">Andres Mills Gallego &copy; 2022</p>\n    <p className={show ? 'showPath' : 'hidden'}>➡ 👟 ➡ 👟 ➡ 👟 ➡ 👟 ➡ 👟 ➡ 👟 ➡ 👟 ➡ 👟 ➡ 👟</p>\n    <div id='links'>\n      <a href='https://github.com/AndresMillsGallego'>GitHub</a>\n      <a href='https://www.linkedin.com/in/andres-mills-gallego/'>LinkedIn</a>\n    </div>\n  </footer>\n  )\n}\n\nexport default Footer;","import React, { useState } from 'react';\nimport { Button, Label } from '@blueprintjs/core'\nimport axios from 'axios';\n\nconst SignUp = () => {\n\n  const [name, setName] = useState('');\n  const [password, setPassword] = useState('')\n\n  const handleName = (e) => {\n    setName(e.target.value);\n  }\n\n  const handlePassword = (e) => {\n    setPassword(e.target.value);\n  }\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    console.log(name, password)\n    const body = {\n      username: name,\n      password: password\n    }\n    let response = await axios.post('https://api-js401.herokuapp.com/signup', body)\n\n\n  }\n  return (\n    <form onSubmit={handleSubmit}>\n      <fieldset id='signup-form'>\n        <legend>Sign Up!</legend>\n      <Label>\n        <input type='text' onChange={handleName} placeholder='username'/>\n      </Label>\n      <Label>\n        <input type='text' onChange={handlePassword} placeholder='password'/>\n      </Label>\n      <Button type='submit' className='bp4-intent-primary'>Submit</Button>\n      </fieldset>\n    </form>\n  )\n}\n\nexport default SignUp;\n","import { useState, useContext } from \"react\";\nimport { AuthContext } from \"../../context/auth\";\nimport { When } from 'react-if'\n\nimport { Button } from '@blueprintjs/core'\nimport SignUp from \"../sign-up/SignUp\";\n\nconst Login = () => {\n\n  const { isLoggedIn, login, logout } = useContext(AuthContext);\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [show, setShow] = useState(false);\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    login(username, password)\n  }\n\n  const handleChange = (e) => {\n    let { name, value } = e.target;\n    if (name === 'username') setUsername(value);\n    if (name === 'password') setPassword(value);\n  }\n\n  return (\n    <div id=\"login\">\n      <When condition={isLoggedIn}>\n        <Button onClick={logout} className='bp4-intent-danger logout'>Logout</Button>\n        <h3 id='welcome'>Welcome {username}!</h3>\n      </When>\n\n      <When condition={!isLoggedIn}>\n        <h1 id=\"login-h1\">ToDo App</h1>\n        {show ? \n        <SignUp /> : <Button id='show-signup' onClick={() => setShow(!show)} className='bp4-intent-warning'>Sign Up Now!</Button>\n        } \n        <form onSubmit={handleSubmit} id='login-form'>\n          <input \n            data-testid=\"username\"\n            placeholder=\"username\"\n            name=\"username\"\n            type='text'\n            onChange={handleChange}\n            />\n            <input \n            data-testid=\"password\"\n            placeholder=\"password\"\n            name=\"password\"\n            type='text'\n            onChange={handleChange}\n            />\n            <Button type='submit' className=\"bp4-intent-primary\">Login</Button>\n        </form>\n      </When>\n    </div>\n  )\n};\n\nexport default Login;","import React, { useContext, useEffect, useState } from 'react';\nimport useForm from '../../hooks/form.js';\nimport axios from 'axios';\n\nimport { SettingsContext } from '../../context/settings.js';\nimport { AuthContext } from '../../context/auth.js';\nimport { v4 as uuid } from 'uuid';\nimport { When } from 'react-if'\n\n\nimport Header from '../header/header'\nimport Form from '../form/form'\nimport List from '../list/list'\nimport Footer from '../footer/Footer'\nimport Login from '../auth/Login'\n\nconst ToDo = () => {\n\n  const settings = useContext(SettingsContext);\n  const auth = useContext(AuthContext);\n\n  const defaultValues = {\n    difficulty: 4,\n  }\n\n  const [list, setList] = useState([]);\n  const [incomplete, setIncomplete] = useState([]);\n  const { handleChange, handleSubmit } = useForm(addItem, defaultValues);\n\n  async function addItem(item) {\n    console.log('item',item);\n    let body = {\n      assignee: item.assignee,\n      text: item.text,\n      difficulty: item.difficulty,\n      id: uuid(),\n      complete: false,\n    }\n    let response = await axios.post('https://api-js401.herokuapp.com/api/v1/todo', body);\n    getItems();\n  }\n\n  async function getItems() {\n    let response = await axios.get('https://api-js401.herokuapp.com/api/v1/todo')\n    setList(response.data.results);\n  }\n\n  async function deleteItem(id) {\n    let response = await axios.delete(`https://api-js401.herokuapp.com/api/v1/todo/${id}`)\n    const items = list.filter(item => item._id !== id);\n    setList(items);\n  }\n\n  async function toggleComplete(id, isComplete) {\n    let response = await axios.put(`https://api-js401.herokuapp.com/api/v1/todo/${id}`, {complete: !isComplete})\n    console.log(response)\n    \n    const items = list.map(item => {\n      if (item._id === id) {\n        item.complete = !item.complete;\n      }\n      return item;\n    });\n    setList(items);\n\n  }\n\n  useEffect(() => {\n    getItems();\n  }, [])\n\n  useEffect(() => {\n    let incompleteCount = list.filter(item => !item.complete).length;\n    setIncomplete(incompleteCount);\n    document.title = `To Do List: ${incomplete}`;\n  }, [list]);\n\n  return (\n    <>\n      <Login />\n      <When condition={auth.isLoggedIn}>\n        <Header incomplete={incomplete} />\n        <div id='main'>\n          <Form\n            handleChange={handleChange}\n            handleSubmit={handleSubmit}\n            defaultValues={defaultValues}\n          />\n\n          <List\n            list={list}\n            toggleComplete={toggleComplete}\n            deleteItem={deleteItem}\n          />\n        </div>\n        <Footer /> \n        </When>\n      </>\n  );\n};\n\nexport default ToDo;","import React from 'react'\nimport { Label, Switch, Button } from '@blueprintjs/core';\nimport { SettingsContext } from '../../context/settings'\nimport { useContext, useState } from 'react';\n\nimport Header from '../header/header'\nimport Footer from '../footer/Footer'\n\nconst Settings = () => {\n\n  const settings = useContext(SettingsContext);\n\n  const [checked, setChecked] = useState(settings.showCompleted);\n  const [items, setItems] = useState(settings.itemsToDisplay);\n  const [sort, setSort] = useState(settings.sortString);\n\n\n\n  const handleItems = (e) => {\n    setItems(e.target.value);\n  }\n\n  const handleSort = (e) => {\n    setSort(e.target.value)\n  }\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    console.log(settings.itemsToDisplay)\n    settings.setShowCompleted(checked);\n    localStorage.setItem('completed', JSON.stringify(checked));\n    settings.setItemsToDisplay(items);\n    localStorage.setItem('items', JSON.stringify(items));\n    settings.setSortString(sort);\n    localStorage.setItem('sort', JSON.stringify(sort))\n    alert('Change Approved!')\n  }\n\n  return (\n    <>\n    <Header /> \n      <form onSubmit={handleSubmit} id='settings-form'>\n        <h2>Settings</h2>\n        <Label>\n          Show Completed\n          <Switch checked={checked} onChange={() => setChecked(!checked)} />\n        </Label>\n          Items To Display <br />\n          <input type='number' min='1' max='5' onChange={handleItems} />\n        <Label>\n          Sort String <br />\n          <input type='text' onChange={handleSort} />\n        </Label>\n\n        <Button type='submit' className='bp4-intent-primary'>Submit Changes</Button>\n        {settings.sortString? \n        <div id='current-settings'>\n          <h3>Current Settings</h3>\n          <p>Show Completed: {settings.showCompleted.toString()}</p>\n          <p>Items To Display: {settings.itemsToDisplay}</p>\n          <p>Sort String: {settings.sortString}</p>\n        </div> : null\n        }\n      </form>\n      <Footer />\n    </>\n  )\n}\n\nexport default Settings;","import React from 'react';\n\nimport ToDo from './components/todo/todo.js';\nimport Settings from './components/settings/Settings'\n\nimport { BrowserRouter, Routes, Route } from 'react-router-dom';\n\nexport default class App extends React.Component {\n  render() {\n    return (\n      <>\n        <BrowserRouter>\n          <Routes>\n            <Route path='/todo-app-1/settings' element={<Settings />} />\n            <Route path='/todo-app-1' element={<ToDo />} />\n          </Routes>\n        </BrowserRouter>\n      </>\n    );\n  }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport SettingsProvider from './context/settings'\nimport AuthProvider from './context/auth';\n\nimport App from './app.js';\nimport './index.scss'\n\nclass Main extends React.Component {\n  render() {\n    return (\n      <SettingsProvider>\n        <AuthProvider>\n          <App />\n        </AuthProvider>\n      </SettingsProvider>\n    );\n  }\n}\n\nconst rootElement = document.getElementById('root');\nReactDOM.render(<Main />, rootElement);"],"sourceRoot":""}